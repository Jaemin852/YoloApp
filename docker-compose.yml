version: "3.9"

services:
  # ──────────────────────────────────────────────────────────
  # 1) YOLO 애플리케이션 컨테이너
  yolo-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: yolo-backend
    restart: always
    env_file: .env
    environment:
      - MODEL_NAME=${MODEL_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    ports:
      - "5000:5000"
    volumes:
      - ./weights:/app/weights       # 모델 가중치 마운트
      - outputs:/app/outputs        # 결과 이미지 저장(명명된 볼륨)
    networks:
      - yolo-net
    depends_on:
      db:
        condition: service_healthy   # DB가 healthy 상태일 때만 시작
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 1g
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # ──────────────────────────────────────────────────────────
  # 2) PostgreSQL 컨테이너
  db:
    image: postgres:15
    container_name: yolo-db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db-data:/var/lib/postgresql/data   # 데이터 영속화
    networks:
      - yolo-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

# ─── Named volumes 선언 ─────────────────────────────────────
volumes:
  outputs:
  db-data:

# ─── 커스텀 네트워크 ────────────────────────────────────────
networks:
  yolo-net:
    driver: bridge
